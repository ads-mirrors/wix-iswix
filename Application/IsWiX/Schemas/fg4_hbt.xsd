<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) FireGiant.  All Rights Reserved. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns:xse="http://wixtoolset.org/schemas/XmlSchemaExtension"
         xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:wxs="http://wixtoolset.org/schemas/v4/wxs"
    targetNamespace="http://www.firegiant.com/schemas/v4/wxs/heatwave/buildtools"
              xmlns="http://www.firegiant.com/schemas/v4/wxs/heatwave/buildtools">
  <xs:annotation>
    <xs:documentation>
      HeatWave Build Tools schema
    </xs:documentation>
  </xs:annotation>

  <xs:import namespace="http://wixtoolset.org/schemas/v4/wxs" />

  <xs:element name="Driver">
    <xs:annotation>
      <xs:documentation>
        Installs and uninstalls kernel and file system drivers.
      </xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="Component" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="DriverDependency">
          <xs:annotation>
            <xs:documentation>Ordered list of dependencies for the driver.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>

      <xs:attribute name="Id" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Unique identifier for this driver configuration. This value will generated if not specified.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Name" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Name to register with the service control manager.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="DisplayName" type="xs:string">
        <xs:annotation>
          <xs:documentation>The localizable string that user interface programs use to identify the driver.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="kernel">
              <xs:annotation>
                <xs:documentation>A kernel driver.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fileSystem">
              <xs:annotation>
                <xs:documentation>A file system driver.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>

      <xs:attribute name="Start" use="required">
        <xs:annotation>
          <xs:documentation>Determines when the driver should be started.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="auto">
              <xs:annotation>
                <xs:documentation>The driver will start during startup of the system.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="demand">
              <xs:annotation>
                <xs:documentation>The driver will start when the service control manager calls the StartService function.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="disabled">
              <xs:annotation>
                <xs:documentation>The driver can no longer be started.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="boot">
              <xs:annotation>
                <xs:documentation>A device driver that will be started by the operating system boot loader.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="system">
              <xs:annotation>
                <xs:documentation>A device driver that will be started by the IoInitSystem function.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>

      <xs:attribute name="ErrorControl" use="required">
        <xs:annotation>
          <xs:documentation>Determines what action should be taken on an error.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ignore">
              <xs:annotation>
                <xs:documentation>Logs the error and continues with the startup operation.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="normal">
              <xs:annotation>
                <xs:documentation>Logs the error, displays a message box and continues the startup operation.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="critical">
              <xs:annotation>
                <xs:documentation>The startup program logs the error in the event log, if possible. If the last-known-good configuration is being started, the startup operation fails. Otherwise, the system is restarted with the last-known good configuration.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="severe">
              <xs:annotation>
                <xs:documentation>The startup program logs the error in the event log. If the last-known-good configuration is being started, the startup operation continues. Otherwise, the system is restarted with the last-known-good configuration.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>

      <xs:attribute name="LoadOrderGroup" type="xs:string">
        <xs:annotation>
          <xs:documentation>The load ordering group that this driver should be a part of.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="BinaryPath" type="xs:string">
        <xs:annotation>
          <xs:documentation>A formatted property that resolves to the path of the driver binary.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

    </xs:complexType>
  </xs:element>

  <xs:element name="DriverDependency">
    <xs:annotation>
      <xs:documentation>Driver or load ordering group that must start before the parent driver.</xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:attribute name="Name" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>
            The value of this attribute should be one of the following:
            <html:ol>
              <html:li>The name (not the display name) of a previously installed driver.</html:li>
              <html:li>The name of a  load ordering group (in which case the Group attribute must be set to 'yes').</html:li>
            </html:ol>
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Group" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Set to 'yes' to indicate that the value in the Name attribute is the name of a load ordering group.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="HarvestFile">
    <xs:annotation>
      <xs:documentation>Harvest a file and exclude it from future harvesting.</xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="Component" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="ExcludeRegistry">
          <xs:annotation>
            <xs:documentation>Exclude specified registry keys found during self-reg harvesting.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>

      <xs:attribute name="Source" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>
            File path to harvest relative to the harvesting document.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Id" type="xs:string">
        <xs:annotation>
          <xs:documentation>Sets the File/@Id for the key harvested file. This value will generated if not specified.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfReg" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Capture self-registration for executable files during harvesting. Self-reg is only attempted when the attribute is set to 'yes'. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegExtensions" type="xs:string">
        <xs:annotation>
          <xs:documentation>Whitespace separated list of file extensions to capture self-registration. Ignored unless SelfReg attribute is 'yes'. Default set of extensions is: .exe, .com, .dll, .ocx, .tlb, .olb</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegExecutableArguments" type="xs:string">
        <xs:annotation>
          <xs:documentation>Command-line arguments to pass to an executable when capturing self-registration. Ignored unless SelfReg attribute is 'yes'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegWarnOnError" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Downgrade error messages encountered during self-registration capture to warnings. Ignored unless SelfReg attribute is 'yes'. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SuppressFont" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Prevent automatically marking ".ttf" and ".otf" files as a font. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="HarvestFolder">
    <xs:annotation>
      <xs:documentation>Harvest files from a folder.</xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="Component" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="Exclude">
          <xs:annotation>
            <xs:documentation>Exclude files from the harvesting.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="ExcludeRegistry">
          <xs:annotation>
            <xs:documentation>Exclude specified registry keys found during self-reg harvesting.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>

      <xs:attribute name="Id" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Unique identifier for this harvest configuration. This value will generated if not specified.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Source" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>
            Root of folder to harvest relative to the harvesting document. If no wildcards are specified all files under the root are harvested. If any wildcard
            is specified only files matching the wildcard are included. For example, "content\*.dat" will include all .dat files from the "content" folder beside
            the .wxs file.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfReg" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Capture self-registration for executable files during harvesting. Self-reg is only attempted when the attribute is set to 'yes'. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegExtensions" type="xs:string">
        <xs:annotation>
          <xs:documentation>Whitespace separated list of file extensions to capture self-registration. Ignored unless SelfReg attribute is 'yes'. Default set of extensions is: .exe, .com, .dll, .ocx, .tlb, .olb</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegExecutableArguments" type="xs:string">
        <xs:annotation>
          <xs:documentation>Command-line arguments to pass to an executable when capturing self-registration. Ignored unless SelfReg attribute is 'yes'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegWarnOnError" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Downgrade error messages encountered during self-registration capture to warnings. Ignored unless SelfReg attribute is 'yes'. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Strategy" type="HarvestStrategyTypeUnion">
        <xs:annotation>
          <xs:documentation>Harvest strategy to apply.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SuppressFont" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Prevent automatically marking ".ttf" files as a font. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="HarvestPayload">
    <xs:annotation>
      <xs:documentation>Harvest a payload and exclude it from future harvesting.</xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="BootstrapperApplication" />
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="BootstrapperApplicationRef" />
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="PayloadGroup" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:any namespace="##other" processContents="lax">
          <xs:annotation>
            <xs:documentation>
              Extensibility point for extension elements.
            </xs:documentation>
          </xs:annotation>
        </xs:any>
      </xs:choice>

      <xs:attribute name="Source" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>
            File path to harvest relative to the harvesting document.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Id" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Unique identifier for this harvest configuration. This value will generated if not specified.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="BundleUI" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Indicates whether the harvested payload is the entry point for the Bundle UI. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Optional file name for the payload. By default the file name from the Source attribute will be used.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="HarvestPayloadFolder">
    <xs:annotation>
      <xs:documentation>Harvest payloads from a folder.</xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="BootstrapperApplication" />
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="BootstrapperApplicationRef" />
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="PayloadGroup" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="Exclude">
          <xs:annotation>
            <xs:documentation>Exclude files from the harvesting.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:any namespace="##other" processContents="lax">
          <xs:annotation>
            <xs:documentation>
              Extensibility point for extension elements.
            </xs:documentation>
          </xs:annotation>
        </xs:any>
      </xs:choice>

      <xs:attribute name="Id" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Unique identifier for this harvest configuration. This value will generated if not specified.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Source" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>
            Root of folder to harvest relative to the harvesting document. If no wildcards are specified all files under the root are harvested. If any wildcard
            is specified only files matching the wildcard are included. For example, "content\*.dat" will include all .dat files from the "content" folder beside
            the .wxs file.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="HarvestProjectOutput">
    <xs:annotation>
      <xs:documentation>Harvest files from a project's output groups.</xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="Component" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="Exclude">
          <xs:annotation>
            <xs:documentation>Exclude files from the harvesting.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="ExcludeRegistry">
          <xs:annotation>
            <xs:documentation>Exclude specified registry keys found during self-reg harvesting.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>

      <xs:attribute name="Id" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>
            Identifier of the project to harvest as displayed by Visual Studio. Typically this is the filename of the referenced project but can be overridden using the HarvestId metadata on the project reference. The project must be referenced by this setup project.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="OutputGroups" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            By default all files from the project reference are harvested. A semicolon, comma or space delimited list of project output groups can reduce the files harvested. Common output groups include:
            BuiltProjectOutputGroup,
            BuiltProjectOutputGroupDependencies,
            DebugSymbolsProjectOutputGroup,
            DebugSymbolsProjectOutputGroupDependencies,
            DocumentationProjectOutputGroup,
            DocumentationProjectOutputGroupDependencies,
            SatelliteDllsProjectOutputGroup,
            SatelliteDllsProjectOutputGroupDependencies,
            SGenFilesOutputGroup,
            SGenFilesOutputGroupDependencies,
            SourceFilesProjectOutputGroup,
            and ContentFilesProjectOutputGroup
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfReg" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Capture self-registration for executable files during harvesting. Self-reg is only attempted when the attribute is set to 'yes'. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegExtensions" type="xs:string">
        <xs:annotation>
          <xs:documentation>Whitespace separated list of file extensions to capture self-registration. Ignored unless SelfReg attribute is 'yes'. Default set of extensions is: .exe, .com, .dll, .ocx, .tlb, .olb</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegExecutableArguments" type="xs:string">
        <xs:annotation>
          <xs:documentation>Command-line arguments to pass to an executable when capturing self-registration. Ignored unless SelfReg attribute is 'yes'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SelfRegWarnOnError" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Downgrade error messages encountered during self-registration capture to warnings. Ignored unless SelfReg attribute is 'yes'. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Strategy" type="HarvestStrategyTypeUnion">
        <xs:annotation>
          <xs:documentation>Harvest strategy to apply.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="SuppressFont" type="wxs:YesNoTypeUnion">
        <xs:annotation>
          <xs:documentation>Prevent automatically marking ".ttf" files as a font. The default is 'no'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="Exclude">
    <xs:annotation>
      <xs:documentation>Exclude files from a harvesting.</xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:attribute name="Files" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Full path or wildcard of files to exclude from a harvesting. For example, to exclude all .pdb files from harvesting use: Files="**\*.pdb"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="ExcludeRegistry">
    <xs:annotation>
      <xs:documentation>Exclude specified registry keys found during self-reg harvesting.</xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:attribute name="Root" type="RegistryRootTypeUnion" use="required">
        <xs:annotation>
          <xs:documentation>Root of the registry keys to excluded. The standard Windows Installer registry roots are supported: "HKCR", "HKCU", "HKMU", "HKLM"</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Key" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Full path or wildcard of registry keys to exclude from self-reg harvesting. For example, to exclude everything under a registry key from harvesting use: Key="SOFTWARE\FireGiant\Ignore\**"</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name or partial name with wildcard of registry values to exclude from a harvesting. If this attribute is not specified, the default is "*" which matches all registry value names in a key.</xs:documentation>
        </xs:annotation>
      </xs:attribute>

      <xs:attribute name="Value" type="xs:string">
        <xs:annotation>
          <xs:documentation>Registry value or partial value with wildcard of registry values to exclude from a harvesting. If this attribute is not specified, the default is "**" which matches all registry values (including values with backslashes, like file paths) of a registry name in a key.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="ProtectedService">
    <xs:annotation>
      <xs:documentation>
        Configures a service as a protected service.
      </xs:documentation>
      <xs:appinfo>
        <xse:parent namespace="http://wixtoolset.org/schemas/v4/wxs" ref="Component" />
      </xs:appinfo>
    </xs:annotation>

    <xs:complexType>
      <xs:attribute name="Name" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Name of the service. If specified, the ids of the user-defined custom actions required to unprotect the service will have this name appended. 
            The name of the service as specified in the ServiceInstall element will be used when protecting the service so this attribute can 
            be omitted if not needed to distinguish the unprotect custom actions for multiple services.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ElamFile" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Id of driver file with ELAM certificate info.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name="HarvestStrategyTypeUnion">
    <xs:annotation>
      <xs:documentation>Values of this type will either be "default", "singleFileComponents" or "contentFileComponentsWithGeneratedKeyPath".</xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="HarvestStrategyType PreprocessorVariables"/>
  </xs:simpleType>

  <xs:simpleType name="HarvestStrategyType">
    <xs:annotation>
      <xs:documentation>Values of this type will either be "default", "singleFileComponents" or "contentFileComponentsWithGeneratedKeyPath".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="default" />
      <xs:enumeration value="singleFileComponents" />
      <xs:enumeration value="contentFileComponentsWithGeneratedKeyPath" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PreprocessorVariables">
    <xs:annotation>
      <xs:documentation>A type that represents that 1 or more preprocessor variables (as they appear in sources on disk, before preprocessor has run).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(\$\(\w+\.(\w|[.])+\))+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="RegistryRootTypeUnion">
    <xs:annotation>
      <xs:documentation>Values of this type will be "HKCR", "HKCU", "HKMU" or "HKLM".</xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="RegistryRootType PreprocessorVariables"/>
  </xs:simpleType>

  <xs:simpleType name="RegistryRootType">
    <xs:annotation>
      <xs:documentation>Values of this type will be "HKCR", "HKCU", "HKMU" or "HKLM".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="HKCR" />
      <xs:enumeration value="HKCU" />
      <xs:enumeration value="HKMU" />
      <xs:enumeration value="HKLM" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
